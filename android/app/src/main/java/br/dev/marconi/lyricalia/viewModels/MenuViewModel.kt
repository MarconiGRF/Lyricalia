package br.dev.marconi.lyricalia.viewModels

import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.ViewModelProvider
import br.dev.marconi.lyricalia.repositories.lyric.LyricDatabase
import br.dev.marconi.lyricalia.repositories.user.User
import br.dev.marconi.lyricalia.utils.StorageUtils
import io.ktor.client.HttpClient
import io.ktor.client.plugins.websocket.WebSockets
import java.io.File

class MenuViewModel(
    private val filesDir: File
): ViewModel() {
    var currentUser = MutableLiveData<User>()
    var serverIp: String

    var greetingPhrases = arrayOf(
        Pair("Qual a letra de hoje, <USER>?", "Â¯\\_(ãƒ„)_/Â¯"),
        Pair("Oi, <USER>!", "Â¯\\_(ãƒ„)_/Â¯"),
        Pair("Vamo levantar poeira, <USER> ðŸŽ¶", "Ivete Sangalo - Poeira"),
        Pair("Deixa a letra te levar, letra leva <USER> ðŸŽ¶", "Zeca Pagodinho - Deixa a vida me levar"),
        Pair("NÃ£o deixe o samba morrer, nÃ£o deixa a letra acabar <USER>! ðŸŽ¶", "Alcione - NÃ£o deixe o samba morrer"),
        Pair("<USER>, se tu soubesse o poder que a loira tem! ðŸŽ¶", "Musa do Calypso - A Loira e a Morena"),
        Pair("<USER>, se tu soubesse o poder que a morena tem! ðŸŽ¶", "Musa do Calypso - A Loira e a Morena"),
        Pair("Sweet dreams are made of lyrics <USER>! ðŸŽ¶", "Eurythmics - Sweet Dreams"),
        Pair("AlÃ´ alÃ´ <USER>, aqui quem fala Ã© da terra! ðŸŽ¶", "Elis Regina - AlÃ´ AlÃ´ Marciano"),
        Pair("Eu jÃ¡ deitei no teu sorriso <USER>! ðŸŽ¶", "Marina Sena - Por Supuesto"),
        Pair("Ã€s vezes no silÃªncio da noite, eu fico imaginando nÃ³s dois <USER>... ðŸŽ¶", "Caetano Veloso - Sozinho"),
        Pair("Estranho Ã© eu gostar tanto do seu all-star azul <USER>! ðŸŽ¶", "Nando Reis - All Star"),
        Pair("Adivinha, Adivinha, Adivinha, <USER>! ðŸŽ¶", "Charli XCX & Billie Ellish - Guess"),
        Pair("I'm your biggest fan, I'll follow you until you love me <USER>! ðŸŽ¶", "Lady Gaga - Paparazzi"),
    )
    var currentGreeting = greetingPhrases.random()

    val httpClient = HttpClient { install(WebSockets) }
    lateinit var lyricDb: LyricDatabase

    init {
        currentUser.value = StorageUtils(filesDir).retrieveUser()
        serverIp = StorageUtils(filesDir).retrieveServerIp()
    }
}

@Suppress("UNCHECKED_CAST")
class MenuViewModelFactory(
    private val filesDir: File
): ViewModelProvider.Factory {
    override fun <T : ViewModel> create(modelClass: Class<T>): T {
        if (modelClass.isAssignableFrom(MenuViewModel::class.java)) {
            return MenuViewModel(filesDir) as T
        }
        throw IllegalArgumentException("Unknown requested class for MenuViewModel")
    }
}